#----------------------------------
#
#       General settings
#
#----------------------------------
# Use ctrl-a as prefix
#unbind C-b
#set -g prefix C-a
#bind C-a send-prefix

# UTF is great, let us use that
set -gq utf8
set-window-option -gq utf8 on

setw -g mode-keys vi
# Mouse support
set -g mouse on

#set -g default-terminal "screen-256color"
# enable 24 bit support
#set -g terminal-overrides ',xterm-256color:Tc'

set -g default-terminal "xterm"
# enable 24 bit support
#set -g terminal-overrides ',xterm-256color:Tc'

# Use xterm keys
set-option -gw xterm-keys on
set-window-option -g xterm-keys on
set-option -gw set-clipboard on

# command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 0
set-option -g base-index 0
setw -g pane-base-index 0

#----------------------------------
#
#       Visual settings
#
#----------------------------------

# Status bar positioning
set-option -g status-position bottom #top
#set -g status-justify centre
#set -g status-justify centre
set -g status-interval 1 # reload every 1s

set -g status-left '#S | #I:#P '
set -g status-left-length 30
set -g status-right '#(volume) #(battery) #(clock) '
set -g status-right-length 50

setw -g window-status-format ' #I:#W#F '
setw -g window-status-current-format ' #I:#W:#F '
# color theme
#set -g status-bg black
#set -g status-fg white
#setw -g window-status-style 'bg=black fg=white'
#setw -g window-status-current-style 'bg=white fg=black bold'

set -g status-bg colour235
set -g status-fg colour4
setw -g window-status-style 'bg=colour235 fg=colour4'
setw -g window-status-current-style 'bg=colour4 fg=colour235 bold'

#set -g status-bg colour235
#set -g status-fg colour214
#setw -g window-status-style 'bg=colour235 fg=colour214'
#setw -g window-status-current-style 'bg=colour214 fg=colour235 bold'

#set -g status-bg colour235
#set -g status-fg colour245
#setw -g window-status-style 'bg=colour235 fg=colour245'
#setw -g window-status-current-style 'bg=colour245 fg=colour235 bold'

#set -g status-bg colour235
#set -g status-fg colour250
#setw -g window-status-style 'bg=colour235 fg=colour245'
#setw -g window-status-current-style 'bg=colour214 fg=colour235 bold'
#----------------------------------
#
#       Keys binding
#
#----------------------------------

# Allow us to reload our tmux configuration while using tmux.
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"
# synchronize panes with C-s
bind-key -n C-s setw synchronize-panes
# split the screen
bind k split-window -h
bind j split-window -v
# Killing windows and panes
bind w kill-pane
bind q kill-window
# Override the default behavior of showing a window preview
#bind s choose-session -N
# Navigation
bind-key v  select-window -t :-
bind-key n  select-window -t :+
# Moving between windows, gnome-terminal style
bind-key -n C-PgUp  select-window -t :-
bind-key -n C-PgDn  select-window -t :+
# move windows forward and backwards
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
# tmux move pane with C-arrows
bind-key -n C-Left  run "tmux select-pane -L"
bind-key -n C-Down  run "tmux select-pane -D"
bind-key -n C-Up    run "tmux select-pane -U"
bind-key -n C-Right run "tmux select-pane -R"
bind-key -n C-Space run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-Space') || tmux select-pane -l"
# Pane resizing
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

#----------------------------------
#       Vim integration
#----------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# vim keybinds on visual mode
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi Escape send -X cancel

#----------------------------------
#      Clipboard integration
#----------------------------------
#unbind-key -T copy-mode-vi Enter ; bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
#bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

unbind-key -T copy-mode-vi Enter ; bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "termux-clipboard-set > /dev/null"
bind-key p run "termux-clipboard-get | tmux load-buffer - ; tmux paste-buffer"
